{"version":3,"sources":["components/CharCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Info/index.js","App.js","index.js"],"names":["CharCard","props","react_default","a","createElement","onClick","charClick","id","clicked","className","alt","name","src","image","Wrapper","children","Title","Info","score","text","App","state","charArray","info","resetGame","newCharArray","_this","map","char","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","_this2","this","components_Wrapper","components_Title","components_Info","components_CharCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+yFAgBeA,MAbf,SAAkBC,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,UAAUL,EAAMM,GAAIN,EAAMO,UAAUC,UAAU,QACtEP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,SAEnCX,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,cAASH,EAAMU,eCHRG,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WAAWR,EAAMc,iBCG1BC,MAJf,SAAef,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAASR,EAAMc,iBCQvBE,MATf,SAAchB,GACZ,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QAAd,iBAAoCR,EAAMiB,OAC1ChB,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QAAQR,EAAMkB,eC0EnBC,6MAzEbC,MAAQ,CACNC,UAAWA,EACXC,KAAM,iEACNL,MAAO,KAGTM,UAAY,WACV,IAAMC,EAAeC,EAAKL,MAAMC,UAAUK,IAAI,SAAAC,GAE5C,OADAA,EAAKpB,SAAU,EACRoB,IAETF,EAAKG,aAAaJ,GAClBC,EAAKI,SAAS,CAAER,UAAWG,EAAcF,KAAM,iCAAkCL,MAAO,OAG1FZ,UAAY,SAACC,EAAIC,GACf,IAAgB,IAAZA,EACFkB,EAAKF,gBACA,CACL,IAAMC,EAAeC,EAAKL,MAAMC,UAAUK,IAAI,SAAAC,GAC5C,OAAIA,EAAKrB,KAAOA,GACdqB,EAAKpB,SAAU,EACRoB,GAEAA,IAGXF,EAAKG,aAAaJ,GAClBC,EAAKI,SAAS,CAAER,UAAWG,EAAcF,KAAM,0BAA2BL,MAAOQ,EAAKL,MAAMH,MAAQ,QAIxGW,aAAe,SAAAE,GAGb,IAFA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAElB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,2EAGA,IAAAQ,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,mBAEExC,EAAAC,EAAAC,cAACuC,EAAD,CACEzB,MAAOsB,KAAKnB,MAAMH,MAClBC,KAAMqB,KAAKnB,MAAME,QAGpBiB,KAAKnB,MAAMC,UAAUK,IAAI,SAAAC,GAAI,OAC5B1B,EAAAC,EAAAC,cAACwC,EAAD,CACEtC,UAAWiC,EAAKjC,UAChBC,GAAIqB,EAAKrB,GACTsC,IAAKjB,EAAKrB,GACVC,QAASoB,EAAKpB,QACdG,KAAMiB,EAAKjB,KACXE,MAAOe,EAAKf,kBAlENiC,mBCFlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8effadbc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharCard(props) {\n  return (\n    <div onClick={() => props.charClick(props.id, props.clicked)} className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <strong>{props.name}</strong>\n      </div>\n    </div>\n  );\n}\n\nexport default CharCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Info(props) {\n  return (\n    <div>\n      <h3 className=\"info\">Current Score:{props.score}</h3>\n      <h3 className=\"info\">{props.text}</h3>\n    </div>\n  )\n}\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport CharCard from \"./components/CharCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Info from \"./components/Info\";\nimport charArray from \"./chars.json\";\n\nclass App extends Component {\n  state = {\n    charArray: charArray,\n    info: \"Click a character to start. Don't click on the same character!\",\n    score: 0\n  };\n\n  resetGame = () => {\n    const newCharArray = this.state.charArray.map(char => {\n      char.clicked = false;\n      return char;\n    });\n    this.shuffleArray(newCharArray);\n    this.setState({ charArray: newCharArray, info: \"Ya done messed up! Restarting!\", score: 0 })\n  };\n\n  charClick = (id, clicked) => {\n    if (clicked === true) {\n      this.resetGame();\n    } else {\n      const newCharArray = this.state.charArray.map(char => {\n        if (char.id === id) {\n          char.clicked = true;\n          return char;\n        } else {\n          return char;\n        }\n      });\n      this.shuffleArray(newCharArray);\n      this.setState({ charArray: newCharArray, info: \"You managed to Not Fail\", score: this.state.score + 1 });\n    };\n  };\n\n  shuffleArray = array => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>\n          Clicky Game\n          <Info\n            score={this.state.score}\n            text={this.state.info}\n          ></Info>\n        </Title>\n        {this.state.charArray.map(char => (\n          <CharCard\n            charClick={this.charClick}\n            id={char.id}\n            key={char.id}\n            clicked={char.clicked}\n            name={char.name}\n            image={char.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}